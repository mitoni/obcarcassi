---
import MainLayout from "../layouts/MainLayout.astro";
import { getCollection } from "astro:content";

const projects = (await getCollection("projects"))
    .sort((a, b) => {
            const aDate = (a.data.orderDate ?? a.data.date ?? new Date(0)).valueOf();
            const bDate = (b.data.orderDate ?? b.data.date ?? new Date(0)).valueOf()
            return bDate - aDate
    })
---

<style>
    @media (max-width: 768px) {
        .projects {
            grid-template-columns: 1fr !important;
        }

        .hero h2 {
            font-size: 2rem !important;
        }

        .project-img {
            width: 80% !important;
            height: 80% !important;
            transform: none !important;
            pointer-events: none;
        }

        .mobile-description {
            display: inline !important;
        }
    }

    .mobile-description {
        font-family: melodrama;
        display: none;
        color: rgb(var(--red));
        font-size: 1.125rem;
        text-align: center;

            &.title {
                font-weight: 600;
            }
    }
        
    .hero {
        width: 100%;
        height: 50vh;

        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

            & h2 {
                font-family: melodrama;
                font-size: 3rem;
                font-weight: 300;
                color: rgb(var(--red));
            }
    }

    .projects {
        max-width: 100%;

        display: grid;
        grid-template-columns: 1fr 1fr;
        row-gap: 6rem;
    }

    .project-link {
        display: inline-flex;
        align-items: center;
        flex-direction: column;
        gap: var(--spacing-rg)
    }

    .project-container {
        width: 100%;
        height: 100%;

        display: flex;
        align-items: center;

        filter: drop-shadow(var(--shadow));
    }

    .project-img {
        align-content: center;

        width: 60%;
        height: 60%;

        filter: opacity(1) blur(0px);

        transition: all var(--time-rg) ease-in-out;

        cursor: none;

            &:hover {
                filter: opacity(0.75) blur(5px);
            }
    }

    #display-container {
        position: fixed;
        z-index: 8;
        pointer-events: none;

        transform: translate(-50%, -50%);

        opacity: 0;

        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;

        transition: opacity var(--time-rg) ease-in-out;
        transition-delay: calc(var(--time-sm) * 0.5);

        color: rgb(var(--red));

        mix-blend-mode: difference;

            & .display-title {
                font-family: melodrama;
                font-size: 3rem;
                font-weight: 600;
                text-align: center;
                width: 60rem;
                filter: drop-shadow(var(--shadow));
                word-break: normal !important;
            }

            & .display-description {
                margin-top: var(--spacing-rg);
                text-align: center;
                width: 30rem;
                font-size: 2rem;
                font-weight: 600;
                filter: drop-shadow(var(--shadow));
                word-break: normal !important;
            }

    }
</style>

<script>
    import { setClipPath } from "../utils";

    const images = document.querySelectorAll('.project-img');

    for (const image of images) {
        setClipPath(image as HTMLImageElement);
    }

    const displayEl = document.querySelector('#display-container')! as HTMLElement;
    const displayTitleEl = displayEl.querySelector('.display-title')! as HTMLElement;
    const displayDescriptionEl = displayEl.querySelector('.display-description')! as HTMLElement;
    const projectsEl = document.querySelector('#projects')! as HTMLElement;

    let current: EventTarget | null;

   function handleMouseEnter(event: Event) {
        displayEl.style.opacity = "1";

        current = event.target;

        if (!current) return;

        const title = (current as HTMLElement).getAttribute('data-title');
        const description = (current as HTMLElement).getAttribute('data-description');

        displayTitleEl.innerText = title || "";
        displayDescriptionEl.innerText = description || "";
    }

    function handleMouseMove(event: MouseEvent) {
        let { x, y } = event;

        displayEl.style.left = `${x}px`;
        displayEl.style.top = `${y}px`;
    }

    function handleMouseLeave() {
        displayEl.style.opacity = "0";
    }

    for (const image of images) {
        image.addEventListener("mouseenter", handleMouseEnter);
        image.addEventListener("mouseleave", handleMouseLeave);
    }

    projectsEl.addEventListener("mousemove", handleMouseMove);
</script>

<MainLayout>
    <section class="hero">
        <h2>I'm <a href="/about"><u>Olga</u></a>, an environmental advocate and material designer.</h2>
    </section>


    <section class="projects" id="projects">
        { projects.map((project, idx) => {
            // const dx = Math.floor(Math.random() * 60 - 30) ;
            // const dy = Math.floor(Math.random() * 50 - 25) ;
            const dy = 0;
            const dx = idx % 2 === 0 ? 8.33 : -8.33;

            return <div class="project-container">
                <a 
                    class="project-link" 
                    href=`/projects/${project.slug}`
                >
                    <img 
                        class="project-img" 
                        style={`transform: translate(${dx}%, ${dy}%)`}
                        src={project.data.image} alt=""
                        data-title={project.data.title}
                        data-description={project.data.description}
                    />

                    <span class="mobile-description title">{project.data.title}</span>
                    <span class="mobile-description">{project.data.description}</span>
                </a>
            </div>
        }) }
    </section>

    <div id="display-container" style="opacity: 0;">
        <div class="display-title"></div>
        <div class="display-description"/></div>
    </div>
</MainLayout>

